CFLGS: Compiled on Sun Sep 26 23:48:11 EDT 2021, git HEAD is , using CXX=g++, CXXFLAGS=-m64 -g -O0 -Wall, CPPFLAGS=-DDEBUG -DDEBUG2 -DSTATS_ALLOCATE -Idist/include/, LDFLAGS=-Ldist/lib/, and LDLIBS=-lconfig++ -lpthread -lrt -lbz2. Compiler version is: g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609. The following options are target specific:; -m128bit-long-double [disabled]; -m16 [disabled]; -m32 [disabled]; -m3dnow [disabled]; -m3dnowa [disabled]; -m64 [enabled]; -m80387 [enabled]; -m8bit-idiv [disabled]; -m96bit-long-double [enabled]; -mabi= sysv; -mabm [disabled]; -maccumulate-outgoing-args [disabled]; -maddress-mode= short; -madx [disabled]; -maes [disabled]; -malign-data= compat; -malign-double [disabled]; -malign-functions= 0; -malign-jumps= 0; -malign-loops= 0; -malign-stringops [enabled]; -mandroid [disabled]; -march= x86-64; -masm= att; -mavx [disabled]; -mavx2 [disabled]; -mavx256-split-unaligned-load [disabled]; -mavx256-split-unaligned-store [disabled]; -mavx512bw [disabled]; -mavx512cd [disabled]; -mavx512dq [disabled]; -mavx512er [disabled]; -mavx512f [disabled]; -mavx512ifma [disabled]; -mavx512pf [disabled]; -mavx512vbmi [disabled]; -mavx512vl [disabled]; -mbionic [disabled]; -mbmi [disabled]; -mbmi2 [disabled]; -mbranch-cost= 0; -mcld [disabled]; -mclflushopt [disabled]; -mclwb [disabled]; -mcmodel= 32; -mcpu= ; -mcrc32 [disabled]; -mcx16 [disabled]; -mdispatch-scheduler [disabled]; -mdump-tune-features [disabled]; -mf16c [disabled]; -mfancy-math-387 [enabled]; -mfentry [enabled]; -mfma [disabled]; -mfma4 [disabled]; -mforce-drap [disabled]; -mfp-ret-in-387 [enabled]; -mfpmath= 387; -mfsgsbase [disabled]; -mfunction-return= keep; -mfused-madd ; -mfxsr [disabled]; -mglibc [enabled]; -mhard-float [enabled]; -mhle [disabled]; -mieee-fp [enabled]; -mincoming-stack-boundary= 0; -mindirect-branch-register [disabled]; -mindirect-branch= keep; -minline-all-stringops [disabled]; -minline-stringops-dynamically [disabled]; -mintel-syntax ; -mlarge-data-threshold= 0x10000; -mlong-double-128 [disabled]; -mlong-double-64 [disabled]; -mlong-double-80 [enabled]; -mlwp [disabled]; -mlzcnt [disabled]; -mmemcpy-strategy= ; -mmemset-strategy= ; -mmmx [disabled]; -mmovbe [disabled]; -mmpx [disabled]; -mms-bitfields [disabled]; -mmwaitx [disabled]; -mno-align-stringops [disabled]; -mno-default [disabled]; -mno-fancy-math-387 [disabled]; -mno-push-args [disabled]; -mno-red-zone [disabled]; -mno-sse4 [enabled]; -mnop-mcount [disabled]; -momit-leaf-frame-pointer [disabled]; -mpc32 [disabled]; -mpc64 [disabled]; -mpc80 [disabled]; -mpclmul [disabled]; -mpcommit [disabled]; -mpopcnt [disabled]; -mprefer-avx128 [disabled]; -mpreferred-stack-boundary= 0; -mprefetchwt1 [disabled]; -mprfchw [disabled]; -mpush-args [enabled]; -mrdrnd [disabled]; -mrdseed [disabled]; -mrecip [disabled]; -mrecip= ; -mrecord-mcount [disabled]; -mred-zone [enabled]; -mregparm= 0; -mrtd [disabled]; -mrtm [disabled]; -msahf [disabled]; -msha [disabled]; -mskip-rax-setup [disabled]; -msoft-float [disabled]; -msse [disabled]; -msse2 [disabled]; -msse2avx [disabled]; -msse3 [disabled]; -msse4 [disabled]; -msse4.1 [disabled]; -msse4.2 [disabled]; -msse4a [disabled]; -msse5 ; -msseregparm [disabled]; -mssse3 [disabled]; -mstack-arg-probe [disabled]; -mstack-protector-guard= tls; -mstackrealign [enabled]; -mstringop-strategy= [default]; -mtbm [disabled]; -mtls-dialect= gnu; -mtls-direct-seg-refs [enabled]; -mtune-ctrl= ; -mtune= generic; -muclibc [disabled]; -mveclibabi= [default]; -mvect8-ret-in-mem [disabled]; -mvzeroupper [disabled]; -mx32 [disabled]; -mxop [disabled]; -mxsave [disabled]; -mxsavec [disabled]; -mxsaveopt [disabled]; -mxsaves [disabled];; Known assembler dialects (for use with the -masm-dialect= option):; att intel;; Known ABIs (for use with the -mabi= option):; ms sysv;; Known code models (for use with the -mcmodel= option):; 32 kernel large medium small;; Valid arguments to -mfpmath=:; 387 387+sse 387,sse both sse sse+387 sse,387;; Known indirect branch choices (for use with the -mindirect-branch=/-mfunction-return= options):; keep thunk thunk-extern thunk-inline;; Known data alignment choices (for use with the -malign-data= option):; abi cacheline compat;; Known vectorization library ABIs (for use with the -mveclibabi= option):; acml svml;; Known address mode (for use with the -maddress-mode= option):; long short;; Known stack protector guard (for use with the -mstack-protector-guard= option):; global tls;; Valid arguments to -mstringop-strategy=:; byte_loop libcall loop rep_4byte rep_8byte rep_byte unrolled_loop vector_loop;; Known TLS dialects (for use with the -mtls-dialect= option):; gnu gnu2;;
---------- QUERY PLAN START ----------
SortLimit (orderby=[2] ascending, limit=10, comparators=[(CtDecimal@8 < CtDecimal@8)])
AggregateSum (agg-fields=[1], sumonfield=2, comparator=(CtLong@0 == CtLong@0))
Merge (spawnedthreads=4)
CycleAccountant
AggregateSum (agg-fields=[1], sumonfield=2, comparator=(CtLong@0 == CtLong@0))
CycleAccountant
MapWrapper (Query1Eval: Evaluates col3-col2, writes it as new col2)
HashJoin (on B$1=P$2, comparator=(CtLong@0 == CtLong@8), project=[B$2, P$1, P$3, ], no probe prefetch, no build prefetch)
. ThreadGroup 0: [00, 01, 02, 03, ]
	Build (hash[{fn=modulo, buckets=524288, offset=0, size=8}], allocon=local)
	. schema=[long, long, ] -> 16 bytes
	ParallelScan (filetype=text, permute filenames, separators=",|	")
	. [00, 01, 02, 03]: "drivers/sample_queries/data//order.tbl.bz2"
Probe
HashJoin (on B$1=P$2, comparator=(CtLong@0 == CtLong@8), project=[B$2, P$1, P$3, ], no probe prefetch, no build prefetch)
. ThreadGroup 0: [00, 01, 02, 03, ]
	Build (hash[{fn=modulo, buckets=262144, offset=0, size=8}], allocon=local)
	. schema=[long, decimal, ] -> 16 bytes
	ParallelScan (filetype=text, permute filenames, separators=",|	")
	. [00, 01, 02, 03]: "drivers/sample_queries/data//part.tbl"
Probe
CycleAccountant
. schema=[long, long, decimal, ] -> 24 bytes
ParallelScan (filetype=text, permute filenames, separators=",|	", verbose)
. [00, 01, 02, 03]: "drivers/sample_queries/data//lineitem.tbl.bz2"
----------- QUERY PLAN END -----------
Loading file "drivers/sample_queries/data//lineitem.tbl.bz2"...
[                                                            ]   0%                                                            ] 001%#                                                           ] 002%#                                                           ] 003%##                                                          ] 004%###                                                         ] 005%####                                                        ] 007%####                                                        ] 008%#####                                                       ] 009%######                                                      ] 010%#######                                                     ] 012%#######                                                     ] 013%########                                                    ] 014%#########                                                   ] 015%#########                                                   ] 016%##########                                                  ] 017%##########                                                  ] 018%###########                                                 ] 019%############                                                ] 020%############                                                ] 021%#############                                               ] 023%##############                                              ] 024%###############                                             ] 025%###############                                             ] 026%################                                            ] 027%################                                            ] 028%#################                                           ] 029%##################                                          ] 030%##################                                          ] 031%###################                                         ] 032%####################                                        ] 034%#####################                                       ] 035%#####################                                       ] 036%######################                                      ] 037%######################                                      ] 038%#######################                                     ] 039%########################                                    ] 040%########################                                    ] 041%#########################                                   ] 042%#########################                                   ] 043%###########################                                 ] 045%###########################                                 ] 046%############################                                ] 047%############################                                ] 048%#############################                               ] 049%##############################                              ] 050%##############################                              ] 051%###############################                             ] 052%###############################                             ] 053%################################                            ] 054%#################################                           ] 056%##################################                          ] 057%##################################                          ] 058%###################################                         ] 059%####################################                        ] 060%####################################                        ] 061%#####################################                       ] 062%#####################################                       ] 063%######################################                      ] 064%#######################################                     ] 065%########################################                    ] 067%########################################                    ] 068%#########################################                   ] 069%##########################################                  ] 070%###########################################                 ] 072%###########################################                 ] 073%############################################                ] 074%#############################################               ] 075%#############################################               ] 076%##############################################              ] 077%##############################################              ] 078%###############################################             ] 079%################################################            ] 080%################################################            ] 081%#################################################           ] 083%##################################################          ] 084%###################################################         ] 085%###################################################         ] 086%####################################################        ] 087%####################################################        ] 088%#####################################################       ] 089%######################################################      ] 090%######################################################      ] 091%#######################################################     ] 092%########################################################    ] 094%#########################################################   ] 095%#########################################################   ] 096%##########################################################  ] 097%##########################################################  ] 098%########################################################### ] 099%############################################################] 100%
21900 -1001052315.91
17900 -500523347.80
7400 -500523000.94
33700 -500522962.86
13600 -500522908.93
57100 -500522904.47
43500 -500522678.60
28900 -500522660.83
62900 4909.64
28500 5034.19
---------- QUERY PLAN START ----------
SortLimit (orderby=[2] ascending, limit=10, comparators=[(CtDecimal@8 < CtDecimal@8)])
AggregateSum (agg-fields=[1], sumonfield=2, comparator=(CtLong@0 == CtLong@0))
. Thread 00: SimpleHashTable (buckets=1,024, bucketsize=4 tuples/80 bytes, spills=0, 
. 		buildhasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		storehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		probehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}])
.           24 buckets have   0 tuples.
.        1,000 buckets have   1 tuples.
Merge (spawnedthreads=4)
CycleAccountant
. Thread	   ScanStart	     GetNext	    ScanStop	       Total	
.     00	   106984.40	        0.56	        0.00	   106984.96	
.     01	   106984.36	        0.39	        0.00	   106984.76	
.     02	   106984.42	        0.39	        0.00	   106984.81	
.     03	   106984.39	        0.40	        0.00	   106984.79	
AggregateSum (agg-fields=[1], sumonfield=2, comparator=(CtLong@0 == CtLong@0))
. Thread 00: SimpleHashTable (buckets=1,024, bucketsize=4 tuples/80 bytes, spills=0, 
. 		buildhasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		storehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		probehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}])
.           24 buckets have   0 tuples.
.        1,000 buckets have   1 tuples.
. Thread 01: SimpleHashTable (buckets=1,024, bucketsize=4 tuples/80 bytes, spills=0, 
. 		buildhasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		storehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		probehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}])
.           24 buckets have   0 tuples.
.        1,000 buckets have   1 tuples.
. Thread 02: SimpleHashTable (buckets=1,024, bucketsize=4 tuples/80 bytes, spills=0, 
. 		buildhasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		storehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		probehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}])
.           24 buckets have   0 tuples.
.        1,000 buckets have   1 tuples.
. Thread 03: SimpleHashTable (buckets=1,024, bucketsize=4 tuples/80 bytes, spills=0, 
. 		buildhasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		storehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}], 
. 		probehasher[{fn=range(min=0, max=99999), buckets=1000, offset=0, size=8}])
.           24 buckets have   0 tuples.
.        1,000 buckets have   1 tuples.
CycleAccountant
. Thread	   ScanStart	     GetNext	    ScanStop	       Total	
.     00	     9196.38	    85855.06	        0.11	    95051.54	
.     01	     9332.55	    84746.51	      626.86	    94705.92	
.     02	     9241.02	    85120.47	      828.39	    95189.87	
.     03	     9271.73	    85381.33	      425.90	    95078.96	
MapWrapper (Query1Eval: Evaluates col3-col2, writes it as new col2)
HashJoin (on B$1=P$2, comparator=(CtLong@0 == CtLong@8), project=[B$2, P$1, P$3, ], no probe prefetch, no build prefetch)
. ThreadGroup 0: [00, 01, 02, 03, ]
	Build (hash[{fn=modulo, buckets=524288, offset=0, size=8}], allocon=local)
	. Group 00: SimpleHashTable (buckets=524,288, bucketsize=4 tuples/80 bytes, spills=0, 
	. 		buildhasher[{fn=modulo, buckets=524288, offset=0, size=8}], 
	. 		storehasher[{fn=modulo, buckets=524288, offset=0, size=8}], 
	. 		probehasher[{fn=modulo, buckets=524288, offset=8, size=8}])
	.       72,864 buckets have   2 tuples.
	.      451,424 buckets have   3 tuples.
	. schema=[long, long, ] -> 16 bytes
	ParallelScan (filetype=text, permute filenames, separators=",|	")
	. [00, 01, 02, 03]: "drivers/sample_queries/data//order.tbl.bz2"
Probe
HashJoin (on B$1=P$2, comparator=(CtLong@0 == CtLong@8), project=[B$2, P$1, P$3, ], no probe prefetch, no build prefetch)
. ThreadGroup 0: [00, 01, 02, 03, ]
	Build (hash[{fn=modulo, buckets=262144, offset=0, size=8}], allocon=local)
	. Group 00: SimpleHashTable (buckets=262,144, bucketsize=4 tuples/80 bytes, spills=0, 
	. 		buildhasher[{fn=modulo, buckets=262144, offset=0, size=8}], 
	. 		storehasher[{fn=modulo, buckets=262144, offset=0, size=8}], 
	. 		probehasher[{fn=modulo, buckets=262144, offset=8, size=8}])
	.      248,576 buckets have   3 tuples.
	.       13,568 buckets have   4 tuples.
	. schema=[long, decimal, ] -> 16 bytes
	ParallelScan (filetype=text, permute filenames, separators=",|	")
	. [00, 01, 02, 03]: "drivers/sample_queries/data//part.tbl"
Probe
CycleAccountant
. Thread	   ScanStart	     GetNext	    ScanStop	       Total	
.     00	        0.05	        0.22	        0.10	        0.37	
.     01	        0.01	        0.23	      626.85	      627.09	
.     02	        0.02	        0.25	      828.38	      828.66	
.     03	        0.04	        0.20	      425.89	      426.13	
. schema=[long, long, decimal, ] -> 24 bytes
ParallelScan (filetype=text, permute filenames, separators=",|	", verbose)
. [00, 01, 02, 03]: "drivers/sample_queries/data//lineitem.tbl.bz2"
----------- QUERY PLAN END -----------
Threads: 4
Cycles: 107009662646
Checksum: (315400, -4504702836.51)
